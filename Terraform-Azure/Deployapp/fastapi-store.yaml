apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kv-secrets
  namespace: default  # Change if needed
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"  # Use true if AKS has a managed identity
    keyvaultName: "examplekeyvaultchet"
    userAssignedIdentityID: "f6a3ce6c-ab3f-4eed-b64c-8409d41c095d"
    tenantId: "4e37dd6c-1a79-455c-a123-64050ce2a125"
    objects: |
      array:
        - |
          objectName: "POSTGRES-HOST"
          objectType: secret
        - |
          objectName: "POSTGRES-USER"
          objectType: secret
        - |
          objectName: "POSTGRES-PASSWORD"
          objectType: secret
        - |
          objectName: "POSTGRES-DB"
          objectType: secret
  #mountSecretsStoreObject: true
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storefront-deployment
  labels:
    app: storefront
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storefront
  template:
    metadata:
      labels:
        app: storefront
    spec:

      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-kv-secrets"

      containers:
        - name: storefront-container
          image: demooacrchet.azurecr.io/storefront:v1
          imagePullPolicy: Always
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/etc/secrets"
              readOnly: true
          ports:
            - containerPort: 8000
          env:
            - name: ENVIRONMENT
              value: "dev"  # Example environment variable
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: storefront-service
spec:
  selector:
    app: storefront
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer
  
---
# INGRESS
# Browse to http://[public_ip]
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storefront
  namespace: default
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: storefront-service
            port:
              number: 80
  
